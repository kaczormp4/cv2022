@import "../../../../variables/shopPage.scss";

.CartVievBox {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  margin-top: $marginMedium;
  margin-bottom: $marginMedium;
}
.Cart {
  width: 100%;
  color: $sectionFontColor;
  font-size: $sectionFontSize;
  display: flex;
  justify-content: space-between;
  align-items: center;
  .arrowBox {
    font-size: $sectionFontSize;
    display: flex;
    align-items: center;
    > span {
      max-height: calc($sectionFontSize + 2 * $paddingVSmall);
    }
    & > svg:hover {
      color: $blackFontColor;
      cursor: pointer;
    }
    & a > button {
      order: 2;
      font-size: $sectionFontSize;
      background-color: white;
      color: $sectionFontColor;
      text-transform: uppercase;
      margin-left: $marginMedium;
      padding: $paddingVSmall;
      border: 4px solid green;
      box-shadow: inset 0px 0px 50px rgba(55, 255, 55, 0.404);
      cursor: pointer;
      font-weight: bold;
      &:hover {
        border: 4px solid $sectionFontColor;
      }
    }
  }
}
.CartVievDesc {
  margin-top: $marginMediumPlus;
  & > a {
    color: $sectionFontColor;
  }
}
@media only screen and (max-width: 860px) {
  .Cart {
    align-items: flex-start !important;
    .arrowBox {
      flex-wrap: wrap;
      justify-content: flex-end;
      > span {
        order: 2;
        min-width: 50%;
      }
    }
  }
}
@media only screen and (max-width: 500px) {
  .Cart {
    .arrowBox {
      > span {
        max-height: calc($sectionFontSize + 2 * $paddingVSmall);
        font-size: $smallFontSize;
      }
      .buttonGTC {
        font-size: $smallFontSize;
      }
    }
  }
}
